package com.example.desafiodojo

import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.CsvSource


class DesafioTest {

    @ParameterizedTest
    @CsvSource(
        "1, A",
        "2, B",
        "3, C",
        "4, D",
        "5, AA",
        "6, AB",
        "7, AC",
        "8, AD",
        "9, BA",
        "10, BB",
        "11, BC",
        "12, BD",
        "13, CA",
        "14, CB",
        "15, CC",
        "16, CD",
        "17, DA",
        "18, DB",
        "19, DC",
        "20, DD",
        "21, AAA",
        "22, AAB",
        "23, AAC",
        "24, AAD",
        "25, ABA",
        "26, ABB",
        "27, ABC",
        "28, ABD",
        "29, ACA",
        "30, ACB",
        "31, ACC",
        "32, ACD",
        "33, ADA",
        "34, ADB",
        "35, ADC",
        "36, ADD",
        "37, BAA",
        "38, BAB",
        "39, BAC",
        "40, BAD",
        "41, BBA",
        "42, BBB",
        "43, BBC",
        "44, BBD",
        "45, BCA",
        "46, BCB",
        "47, BCC",
        "48, BCD",
        "49, BDA",
        "50, BDB",
        "51, BDC",
        "52, BDD",
        "53, CAA",
        "54, CAB",
        "55, CAC",
        "56, CAD",
        "57, CBA",
        "58, CBB",
        "59, CBC",
        "60, CBD",
        "61, CCA",
        "62, CCB",
        "63, CCC",
        "64, CCD",
        "65, CDA",
        "66, CDB",
        "67, CDC",
        "68, CDD",
        "69, DAA",
        "70, DAB",
        "71, DAC",
        "72, DAD",
        "73, DBA",
        "74, DBB",
        "75, DBC",
        "76, DBD",
        "77, DCA",
        "78, DCB",
        "79, DCC",
        "80, DCD",
        "81, DDA",
        "82, DDB",
        "83, DDC",
        "84, DDD",
        "85, AAAA",
        "86, AAAB",
        "87, AAAC",
        "88, AAAD",
        "89, AABA",
        "90, AABB",
        "91, AABC",
        "92, AABD",
        "93, AACA",
        "94, AACB",
        "95, AACC",
        "96, AACD",
        "97, AADA",
        "98, AADB",
        "99, AADC",
        "100, AADD",
        "101, ABAA",
        "102, ABAB",
        "103, ABAC",
        "104, ABAD",
        "105, ABBA",
        "106, ABBB",
        "107, ABBC",
        "108, ABBD",
        "109, ABCA",
        "110, ABCB",
        "111, ABCC",
        "112, ABCD",
        "113, ABDA",
        "114, ABDB",
        "115, ABDC",
        "116, ABDD",
        "117, ACAA",
        "118, ACAB",
        "119, ACAC",
        "120, ACAD",
        "121, ACBA",
        "122, ACBB",
        "123, ACBC",
        "124, ACBD",
        "125, ACCA",
        "126, ACCB",
        "127, ACCC",
        "128, ACCD",
        "129, ACDA",
        "130, ACDB",
        "131, ACDC",
        "132, ACDD",
        "133, ADAA",
        "134, ADAB",
        "135, ADAC",
        "136, ADAD",
        "137, ADBA",
        "138, ADBB",
        "139, ADBC",
        "140, ADBD",
        "141, ADCA",
        "142, ADCB",
        "143, ADCC",
        "144, ADCD",
        "145, ADDA",
        "146, ADDB",
        "147, ADDC",
        "148, ADDD",
        "149, BAAA",
        "150, BAAB",
        "151, BAAC",
        "152, BAAD",

        )
    fun testaIndice(input: Int, expected: String) {
        assertEquals(expected, Desafio.calcular(input))
    }
}